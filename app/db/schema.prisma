generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  magicLinks       MagicLink[]
  managedLocations LocationManager[]
  ownedCompanies   CompanyOwner[]
}

model Company {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  locations Location[]
  owners    CompanyOwner[]
}

model CompanyOwner {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  company   Company @relation(fields: [companyId], references: [id])
  companyId Int

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, companyId])
}

model Location {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  company   Company @relation(fields: [companyId], references: [id])
  companyId Int

  managers LocationManager[]
}

model LocationManager {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  location   Location @relation(fields: [locationId], references: [id])
  locationId Int

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, locationId])
}

model MagicLink {
  id        String   @id @default(uuid())
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  user   User   @relation(fields: [userId], references: [id])
  userId String
}
